import { useParams } from "wouter";
import { Button } from "@/components/ui/button";
import { Star, ArrowLeft, Heart, Share2, Play, ShoppingCart } from "lucide-react";
import { useState } from "react";

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–∫—Ç–µ–π–ª—è –ú–æ—Ö–∏—Ç–æ
const mojitorecipeData = {
  id: 2,
  name: "–ú–æ—Ö–∏—Ç–æ",
  image: "/attached_assets/Flux_Dev_a_lush_3d_render_of_A_refreshing_Mojito_in_a_tall_hig_0_1753377591761.jpg",
  description: "–û—Å–≤–µ–∂–∞—é—â–∏–π –∫—É–±–∏–Ω—Å–∫–∏–π –∫–æ–∫—Ç–µ–π–ª—å —Å –º—è—Ç–æ–π –∏ –ª–∞–π–º–æ–º",
  tags: ["üåø –õ—ë–≥–∫–∏–π", "üå± –ú—è—Ç–Ω—ã–π", "‚ùÑÔ∏è –û—Å–≤–µ–∂–∞—é—â–∏–π"],
  abv: 10,
  volume: 200,
  calories: 160,
  price: 240,
  rating: 4.8,
  reviewCount: 342,
  videoUrl: "https://www.youtube.com/watch?v=Zc_TZ0UWP3I",
  ingredients: [
    { name: "–†–æ–º", amount: "50 –º–ª", icon: "ü•É" },
    { name: "–ú—è—Ç–∞", amount: "10 –≥", icon: "üåø" },
    { name: "–õ–∞–π–º", amount: "¬Ω —à—Ç—É–∫–∏", icon: "üçã" },
    { name: "–°–∞—Ö–∞—Ä", amount: "2 —á. –ª–æ–∂–∫–∏", icon: "üç¨" },
    { name: "–°–æ–¥–æ–≤–∞—è", amount: "–¥–æ 200 –º–ª", icon: "üíß" }
  ],
  steps: [
    { icon: "üçã", text: "–†–∞–∑–æ–º–Ω–∏ –º—è—Ç—É –∏ —Å–∞—Ö–∞—Ä —Å –ª–∞–π–º–æ–º", step: 1 },
    { icon: "üßä", text: "–î–æ–±–∞–≤—å —Ä–æ–º –∏ –ª—ë–¥", step: 2 },
    { icon: "ü•§", text: "–î–æ–ª–µ–π —Å–æ–¥–æ–≤—É—é", step: 3 },
    { icon: "üçπ", text: "–ü–µ—Ä–µ–º–µ—à–∞–π –ª–æ–∂–∫–æ–π", step: 4 }
  ],
  equipment: [
    { name: "–î–∂—É–ª–µ–ø –ª–æ–∂–∫–∞", icon: "ü•Ñ" },
    { name: "–ë–∞—Ä–Ω—ã–π —Å—Ç–∞–∫–∞–Ω", icon: "ü•É" },
    { name: "–î–∂–∏–≥–≥–µ—Ä", icon: "üß¥" }
  ],
  taste: {
    sweetness: 3,
    sourness: 3,
    bitterness: 1,
    strength: 2,
    refreshing: 5
  },
  recommendations: [
    { name: "Cuba Libre", image: "/attached_assets/Flux_Dev_a_lush_3d_render_of_A_Cuba_Libre_in_a_tall_glass_dark_2_1753377591756.jpg" },
    { name: "Margarita", image: "/attached_assets/Flux_Dev_a_lush_3d_render_of_A_classic_Margarita_cocktail_in_a_0_1753377591761.jpg" }
  ]
};

const TasteSemicircles = ({ taste }: { taste: any }) => {
  const characteristics = [
    { label: "–°–ª–∞–¥–æ—Å—Ç—å", value: taste.sweetness, color: "#FF006E", shadowColor: "rgba(255, 0, 110, 0.6)" }, // –ù–µ–æ–Ω–æ–≤–æ-—Ä–æ–∑–æ–≤—ã–π
    { label: "–ö–∏—Å–ª–æ—Ç–Ω–æ—Å—Ç—å", value: taste.sourness, color: "#FFBE0B", shadowColor: "rgba(255, 190, 11, 0.6)" }, // –ù–µ–æ–Ω–æ–≤–æ-–∂–µ–ª—Ç—ã–π
    { label: "–ì–æ—Ä–µ—á—å", value: taste.bitterness, color: "#FB5607", shadowColor: "rgba(251, 86, 7, 0.6)" }, // –ù–µ–æ–Ω–æ–≤–æ-–æ—Ä–∞–Ω–∂–µ–≤—ã–π
    { label: "–ö—Ä–µ–ø–æ—Å—Ç—å", value: taste.strength, color: "#8338EC", shadowColor: "rgba(131, 56, 236, 0.6)" }, // –ù–µ–æ–Ω–æ–≤–æ-—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
    { label: "–û—Å–≤–µ–∂–∞—é—â–∞—è —Å–∏–ª–∞", value: taste.refreshing, color: "#06FFA5", shadowColor: "rgba(6, 255, 165, 0.6)" } // –ù–µ–æ–Ω–æ–≤–æ-–∑–µ–ª–µ–Ω—ã–π
  ];

  const SemicircleChart = ({ value, color, shadowColor, label }: { value: number, color: string, shadowColor: string, label: string }) => {
    const radius = 80;
    const strokeWidth = 16;
    const segments = 5;
    const gapAngle = 3; // –£–≥–æ–ª –∑–∞–∑–æ—Ä–∞ –º–µ–∂–¥—É —Å–µ–≥–º–µ–Ω—Ç–∞–º–∏
    const segmentAngle = (180 - (segments - 1) * gapAngle) / segments; // –£–≥–æ–ª –∫–∞–∂–¥–æ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞ —Å —É—á–µ—Ç–æ–º –∑–∞–∑–æ—Ä–æ–≤
    const centerX = 100;
    const centerY = 100;

    return (
      <div className="flex flex-col items-center">
        <div className="relative mb-6">
          <svg width="200" height="120" className="overflow-visible">
            {/* –°–µ–≥–º–µ–Ω—Ç—ã –ø–æ–ª—É–∫—Ä—É–≥–∞ */}
            {Array.from({ length: segments }, (_, i) => {
              const startAngle = i * (segmentAngle + gapAngle);
              const endAngle = startAngle + segmentAngle;
              
              // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —Ä–∞–¥–∏–∞–Ω—ã –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–ª—É–∫—Ä—É–≥–∞
              const startRadian = (startAngle) * Math.PI / 180;
              const endRadian = (endAngle) * Math.PI / 180;
              
              const startX = centerX - radius * Math.cos(startRadian);
              const startY = centerY - radius * Math.sin(startRadian);
              const endX = centerX - radius * Math.cos(endRadian);
              const endY = centerY - radius * Math.sin(endRadian);
              
              const largeArcFlag = (endAngle - startAngle) > 180 ? 1 : 0;
              
              // –°–æ–∑–¥–∞–µ–º —Ç–æ–ª—Å—Ç—É—é –¥—É–≥—É –≤–º–µ—Å—Ç–æ —Å–µ–∫—Ç–æ—Ä–∞
              const outerRadius = radius;
              const innerRadius = radius - strokeWidth;
              
              const outerStartX = centerX - outerRadius * Math.cos(startRadian);
              const outerStartY = centerY - outerRadius * Math.sin(startRadian);
              const outerEndX = centerX - outerRadius * Math.cos(endRadian);
              const outerEndY = centerY - outerRadius * Math.sin(endRadian);
              
              const innerStartX = centerX - innerRadius * Math.cos(startRadian);
              const innerStartY = centerY - innerRadius * Math.sin(startRadian);
              const innerEndX = centerX - innerRadius * Math.cos(endRadian);
              const innerEndY = centerY - innerRadius * Math.sin(endRadian);
              
              const pathData = [
                `M ${outerStartX} ${outerStartY}`,
                `A ${outerRadius} ${outerRadius} 0 ${largeArcFlag} 1 ${outerEndX} ${outerEndY}`,
                `L ${innerEndX} ${innerEndY}`,
                `A ${innerRadius} ${innerRadius} 0 ${largeArcFlag} 0 ${innerStartX} ${innerStartY}`,
                `Z`
              ].join(' ');
              
              const isActive = i < value;
              
              return (
                <path
                  key={i}
                  d={pathData}
                  fill={isActive ? color : "rgba(128, 128, 128, 0.15)"}
                  stroke={isActive ? color : "rgba(128, 128, 128, 0.3)"}
                  strokeWidth="2"
                  filter={isActive ? `drop-shadow(0 0 12px ${shadowColor})` : "none"}
                  className="transition-all duration-300"
                />
              );
            })}
            
            {/* –ë–∞–∑–æ–≤–∞—è –ª–∏–Ω–∏—è –ø–æ–ª—É–∫—Ä—É–≥–∞ */}
            <line
              x1={centerX - radius}
              y1={centerY}
              x2={centerX + radius}
              y2={centerY}
              stroke="rgba(255, 255, 255, 0.2)"
              strokeWidth="2"
            />
          </svg>
        </div>
        
        {/* –ù–∞–∑–≤–∞–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ */}
        <div className="text-center">
          <div className="text-white font-semibold text-base mb-2">{label}</div>
          <div 
            className="text-xl font-bold"
            style={{ 
              color: color,
              textShadow: `0 0 12px ${shadowColor}`
            }}
          >
            {value}/5
          </div>
        </div>
      </div>
    );
  };

  return (
    <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-8 justify-items-center">
      {characteristics.map((char, index) => (
        <SemicircleChart
          key={index}
          value={char.value}
          color={char.color}
          shadowColor={char.shadowColor}
          label={char.label}
        />
      ))}
    </div>
  );
};

export default function RecipePage() {
  const params = useParams();
  const [currentStep, setCurrentStep] = useState(1);
  const [isFavorite, setIsFavorite] = useState(false);
  const [userRating, setUserRating] = useState(0);

  const recipe = mojitorecipeData; // –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ ID

  return (
    <div className="min-h-screen bg-gradient-to-br from-[#0A0A0D] via-[#1B1B1F] to-[#0A0A0D]">
      {/* Back Button - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∏—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
      <div className="absolute top-6 left-6 z-20 md:top-6 md:left-6">
        <Button
          onClick={() => window.history.back()}
          className="bg-black/40 backdrop-blur-sm border border-white/20 hover:bg-black/60 transition-all duration-300"
        >
          <ArrowLeft className="w-4 h-4 mr-2" />
          –ù–∞–∑–∞–¥
        </Button>
      </div>

      {/* Hero Section */}
      <section className="relative min-h-[70vh] flex items-center justify-center overflow-hidden">
        {/* Background Image */}
        <div className="absolute inset-0">
          <img
            src={recipe.image}
            alt={recipe.name}
            className="w-full h-full object-cover scale-110 blur-sm"
          />
          <div className="absolute inset-0 bg-gradient-to-t from-black/90 via-black/60 to-black/30" />
        </div>

        {/* Hero Content */}
        <div className="relative z-10 text-center max-w-4xl mx-auto px-6">
          {/* Cocktail Glass - –∫—Ä—É–≥–ª–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –Ω–µ–æ–Ω–æ–≤—ã–º —Å–≤–µ—á–µ–Ω–∏–µ–º */}
          <div className="mt-8 mb-16 flex justify-center">
            <div className="relative">
              <img
                src={recipe.image}
                alt={recipe.name}
                className="w-64 h-64 max-[500px]:w-56 max-[500px]:h-56 sm:w-80 sm:h-80 lg:w-[28rem] lg:h-[28rem] mx-auto object-cover rounded-full shadow-2xl transition-transform duration-500 hover:scale-105 border-4 border-cyan-400/30"
                style={{
                  filter: 'drop-shadow(0 0 40px rgba(6, 182, 212, 0.6))'
                }}
              />
              {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–µ–æ–Ω–æ–≤—ã–µ –∫–æ–ª—å—Ü–∞ */}
              <div className="absolute inset-0 rounded-full border-2 border-purple-400/40 animate-pulse"></div>
              <div className="absolute -inset-2 rounded-full border border-cyan-300/30 animate-pulse" style={{ animationDelay: '1s' }}></div>
            </div>
          </div>

          {/* Title */}
          <h1 
            className="text-6xl font-bold text-white mb-8 max-[480px]:text-4xl mt-12"
            style={{ textShadow: '0 0 20px rgba(0, 255, 240, 0.5)' }}
          >
            {recipe.name}
          </h1>

          {/* Tags */}
          <div className="flex flex-wrap justify-center gap-3 mb-16">
            {recipe.tags.map((tag, index) => (
              <span
                key={index}
                className="px-4 py-2 bg-zinc-800/80 backdrop-blur-sm text-cyan-400 rounded-full text-sm font-medium border border-cyan-400/30 hover:scale-105 transition-transform duration-200"
              >
                {tag}
              </span>
            ))}
          </div>
        </div>
      </section>

      {/* Main Content */}
      <div className="max-w-6xl mx-auto px-6 py-12 space-y-16">
        
        {/* Ingredients & Calculations */}
        <section className="grid md:grid-cols-2 gap-8">
          {/* Ingredients */}
          <div>
            <h2 className="text-3xl font-bold text-white mb-6 text-center">
              üß™ –ß—Ç–æ –≤–Ω—É—Ç—Ä–∏?
            </h2>
            <div className="bg-black/40 backdrop-blur-sm rounded-2xl p-6 border border-white/10">
              <div className="space-y-4">
                {recipe.ingredients.map((ingredient, index) => (
                  <div key={index} className="flex items-center justify-between text-white">
                    <div className="flex items-center space-x-3">
                      <span className="text-2xl">{ingredient.icon}</span>
                      <span className="text-lg">{ingredient.name}</span>
                    </div>
                    <span className="text-cyan-400 font-semibold">{ingredient.amount}</span>
                  </div>
                ))}
              </div>
            </div>
          </div>

          {/* Calculations - —Ç—ë–º–Ω—ã–π —Ñ–æ–Ω –∫–∞–∫ —É –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ */}
          <div>
            <h2 className="text-3xl font-bold text-white mb-6 text-center">üìä –†–∞—Å—á—ë—Ç—ã</h2>
            <div className="bg-black/40 backdrop-blur-sm rounded-2xl p-6 border border-white/10">
              <div className="grid grid-cols-2 gap-4">
                <div className="text-center p-4 bg-gradient-to-br from-purple-500/20 to-purple-600/20 rounded-xl border border-purple-400/30 shadow-lg shadow-purple-500/20">
                  <div className="text-2xl font-bold text-purple-300" style={{ textShadow: '0 0 10px rgba(168, 85, 247, 0.8)' }}>{recipe.abv}%</div>
                  <div className="text-white/80">ABV</div>
                </div>
                <div className="text-center p-4 bg-gradient-to-br from-cyan-500/20 to-cyan-600/20 rounded-xl border border-cyan-400/30 shadow-lg shadow-cyan-500/20">
                  <div className="text-2xl font-bold text-cyan-300" style={{ textShadow: '0 0 10px rgba(6, 182, 212, 0.8)' }}>{recipe.volume} –º–ª</div>
                  <div className="text-white/80">–û–±—ä—ë–º</div>
                </div>
                <div className="text-center p-4 bg-gradient-to-br from-pink-500/20 to-pink-600/20 rounded-xl border border-pink-400/30 shadow-lg shadow-pink-500/20">
                  <div className="text-2xl font-bold text-pink-300" style={{ textShadow: '0 0 10px rgba(236, 72, 153, 0.8)' }}>{recipe.calories} –∫–∫–∞–ª</div>
                  <div className="text-white/80">–ö–∞–ª–æ—Ä–∏–∏</div>
                </div>
                <div className="text-center p-4 bg-gradient-to-br from-green-500/20 to-green-600/20 rounded-xl border border-green-400/30 shadow-lg shadow-green-500/20">
                  <div className="text-2xl font-bold text-green-300" style={{ textShadow: '0 0 10px rgba(34, 197, 94, 0.8)' }}>{recipe.price} ‚ÇΩ</div>
                  <div className="text-white/80">–°—Ç–æ–∏–º–æ—Å—Ç—å</div>
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* Main Content Grid - Equipment and Video */}
        <section className="grid lg:grid-cols-2 gap-8">
          {/* Equipment Section - Left side */}
          <div>
            <h2 className="text-3xl font-bold text-white mb-6 text-center">–ß—Ç–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è ?</h2>
            <div className="bg-black/40 backdrop-blur-sm rounded-2xl p-6 border border-white/10">
              <div className="grid md:grid-cols-2 lg:grid-cols-1 xl:grid-cols-2 gap-4 mb-6">
                {recipe.equipment.map((item, index) => (
                  <div key={index} className="text-center p-4 bg-gradient-to-br from-white/5 to-white/10 rounded-xl border border-white/20 hover:border-white/40 hover:from-white/10 hover:to-white/15 transition-all duration-300 transform hover:scale-105">
                    <div className="text-4xl mb-3 transform hover:scale-110 transition-transform duration-200">{item.icon}</div>
                    <div className="text-white font-semibold text-base">{item.name}</div>
                  </div>
                ))}
                {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–∏–º–º–µ—Ç—Ä–∏–∏ –≤ 2-–∫–æ–ª–æ–Ω–æ—á–Ω–æ–π –∫–æ–º–ø–æ–Ω–æ–≤–∫–µ */}
                <div className="text-center p-4 bg-gradient-to-br from-white/5 to-white/10 rounded-xl border border-white/20 hover:border-white/40 hover:from-white/10 hover:to-white/15 transition-all duration-300 transform hover:scale-105 md:block lg:hidden xl:block hidden">
                  <div className="text-4xl mb-3 transform hover:scale-110 transition-transform duration-200">üòä</div>
                  <div className="text-white font-semibold text-base">–•–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ</div>
                </div>
              </div>
              
              {/* –ï–¥–∏–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ü–æ—Å–µ—Ç–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω */}
              <div className="text-center">
                <Button className="bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600 px-8 py-4 text-lg font-semibold rounded-2xl shadow-xl transform hover:scale-105 transition-all duration-300 border border-orange-400/30"
                  style={{
                    boxShadow: '0 0 20px rgba(234, 88, 12, 0.4)'
                  }}
                >
                  <ShoppingCart className="w-6 h-6 mr-3" />
                  –ü–æ—Å–µ—Ç–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω
                </Button>
              </div>
            </div>
          </div>

          {/* Video Section - Right side */}
          <div>
            <h2 className="text-3xl font-bold text-white mb-6 text-center">üìΩ –í–∏–¥–µ–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è</h2>
            <div className="bg-black/40 backdrop-blur-sm rounded-2xl p-6 border border-white/10 flex flex-col">
              
              <div className="flex-1 flex items-center justify-center">
                <div className="relative w-full max-w-lg">
                  <div className="aspect-video bg-gradient-to-br from-purple-900/30 to-cyan-900/30 rounded-2xl flex items-center justify-center border-2 border-white/20 backdrop-blur-md overflow-hidden">
                    {/* Background pattern */}
                    <div className="absolute inset-0 opacity-20">
                      <div className="w-full h-full bg-gradient-to-br from-white/5 to-transparent"></div>
                    </div>
                  </div>
                </div>
              </div>

              <div className="text-center mt-4">
                <Button
                  onClick={() => window.open(recipe.videoUrl, '_blank')}
                  className="bg-gradient-to-r from-purple-600/90 to-cyan-600/90 hover:from-purple-500/90 hover:to-cyan-500/90 px-12 py-6 text-xl font-semibold rounded-2xl shadow-2xl transform hover:scale-105 transition-all duration-300 border border-white/30 backdrop-blur-sm"
                  style={{
                    boxShadow: '0 0 30px rgba(168, 85, 247, 0.4), 0 0 60px rgba(6, 182, 212, 0.2)'
                  }}
                >
                  <Play className="w-8 h-8 mr-3" />
                  –°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ
                </Button>
              </div>
            </div>
          </div>
        </section>

        {/* Recipe Steps - –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º */}
        <section>
          <h2 className="text-3xl font-bold text-white mb-4 text-center">–ü–æ—à–∞–≥–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç</h2>
          <p className="text-zinc-400 text-center mb-8 text-sm">
            –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
          </p>
          <div className="w-full">
            {recipe.steps.map((step, index) => {
              // –ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞
              const getStepDescription = (stepNumber: number) => {
                switch(stepNumber) {
                  case 1: return "–í–æ–∑—å–º–∏—Ç–µ —Å–≤–µ–∂–∏–µ –ª–∏—Å—Ç—å—è –º—è—Ç—ã –∏ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ —Ä–∞–∑–æ–º–Ω–∏—Ç–µ –∏—Ö –≤ –±–∞—Ä–Ω–æ–º —Å—Ç–∞–∫–∞–Ω–µ –≤–º–µ—Å—Ç–µ —Å —Å–∞—Ö–∞—Ä–æ–º –∏ –∫—É—Å–æ—á–∫–∞–º–∏ –ª–∞–π–º–∞. –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –º–∞–¥–ª–∏–Ω–≥ - –æ–Ω –ø–æ–º–æ–∂–µ—Ç –∏–∑–≤–ª–µ—á—å —ç—Ñ–∏—Ä–Ω—ã–µ –º–∞—Å–ª–∞ –∏–∑ –º—è—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–¥–∞–¥—É—Ç –∫–æ–∫—Ç–µ–π–ª—é –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—ã–π –∞—Ä–æ–º–∞—Ç. –ù–µ –ø–µ—Ä–µ—É—Å–µ—Ä–¥—Å—Ç–≤—É–π—Ç–µ, —á—Ç–æ–±—ã –Ω–µ —Å–¥–µ–ª–∞—Ç—å –Ω–∞–ø–∏—Ç–æ–∫ –≥–æ—Ä—å–∫–∏–º.";
                  case 2: return "–î–æ–±–∞–≤—å—Ç–µ —Å–≤–µ—Ç–ª—ã–π —Ä–æ–º –≤ —Å—Ç–∞–∫–∞–Ω —Å —Ä–∞–∑–º—è—Ç–æ–π –º—è—Ç–æ–π. –°–ª–µ–¥–æ–º –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –Ω–∞—Å—ã–ø—å—Ç–µ –∫–æ–ª–æ—Ç—ã–π –ª—ë–¥ –¥–æ –≤–µ—Ä—Ö–∞ —Å—Ç–∞–∫–∞–Ω–∞. –õ—ë–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ–ª–∫–∏–º, —á—Ç–æ–±—ã —Ö–æ—Ä–æ—à–æ –æ—Ö–ª–∞–¥–∏—Ç—å –Ω–∞–ø–∏—Ç–æ–∫, –Ω–æ –Ω–µ —Å–ª–∏—à–∫–æ–º –º–µ–ª–∫–∏–º, —á—Ç–æ–±—ã –Ω–µ —Ä–∞–∑–±–∞–≤–∏—Ç—å –µ–≥–æ —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥–æ–π–¥—ë—Ç –ª—ë–¥ —Ä–∞–∑–º–µ—Ä–æ–º —Å –æ—Ä–µ—Ö.";
                  case 3: return "–ú–µ–¥–ª–µ–Ω–Ω–æ –¥–æ–ª–µ–π—Ç–µ —Å–æ–¥–æ–≤—É—é –≤–æ–¥—É –¥–æ –≤–µ—Ä—Ö–∞ —Å—Ç–∞–∫–∞–Ω–∞. –ù–∞–ª–∏–≤–∞–π—Ç–µ –µ—ë —Ç–æ–Ω–∫–æ–π —Å—Ç—Ä—É–π–∫–æ–π –ø–æ –±–∞—Ä–Ω–æ–π –ª–æ–∂–∫–µ, —á—Ç–æ–±—ã –Ω–µ —Ä–∞–∑—Ä—É—à–∏—Ç—å —Å–ª–æ–∏—Å—Ç–æ—Å—Ç—å –Ω–∞–ø–∏—Ç–∫–∞. –°–æ–¥–æ–≤–∞—è –ø—Ä–∏–¥–∞—Å—Ç –º–æ—Ö–∏—Ç–æ –ª—ë–≥–∫—É—é –∏–≥—Ä–∏—Å—Ç–æ—Å—Ç—å –∏ –æ—Å–≤–µ–∂–∞—é—â–∏–π —ç—Ñ—Ñ–µ–∫—Ç. –í–∞–∂–Ω–æ –Ω–µ –ø–µ—Ä–µ–±–æ—Ä—â–∏—Ç—å - —Å–æ–¥–æ–≤–∞—è –¥–æ–ª–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω—è—Ç—å, –∞ –Ω–µ –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –≤–æ –≤–∫—É—Å–µ.";
                  case 4: return "–û—Å—Ç–æ—Ä–æ–∂–Ω–æ –ø–µ—Ä–µ–º–µ—à–∞–π—Ç–µ –∫–æ–∫—Ç–µ–π–ª—å –±–∞—Ä–Ω–æ–π –ª–æ–∂–∫–æ–π –¥–≤–∏–∂–µ–Ω–∏—è–º–∏ —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö. –¶–µ–ª—å - –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –≤—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã, –Ω–µ –ø–æ–≤—Ä–µ–¥–∏–≤ –ª–∏—Å—Ç—å—è –º—è—Ç—ã. –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–π—Ç–µ 3-4 —Ä–∞–∑–∞, —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ. –£–∫—Ä–∞—Å—å—Ç–µ –≤–µ—Ç–æ—á–∫–æ–π —Å–≤–µ–∂–µ–π –º—è—Ç—ã –∏ –¥–æ–ª—å–∫–æ–π –ª–∞–π–º–∞ –Ω–∞ –∫—Ä–∞—é —Å—Ç–∞–∫–∞–Ω–∞. –í–∞—à –∏–¥–µ–∞–ª—å–Ω—ã–π –º–æ—Ö–∏—Ç–æ –≥–æ—Ç–æ–≤!";
                  default: return "–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ —à–∞–≥–∞ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∫–æ–∫—Ç–µ–π–ª—è.";
                }
              };
              
              return (
                <div
                  key={index}
                  className={`${
                    currentStep === step.step ? 'block' : 'hidden'
                  } transition-all duration-500`}
                >
                  <div
                    className="cursor-pointer transform hover:scale-[1.01] transition-all duration-300 group"
                    onClick={() => {
                      if (currentStep < recipe.steps.length) {
                        setCurrentStep(currentStep + 1);
                      } else {
                        setCurrentStep(1);
                      }
                    }}
                  >
                    {/* –ü–æ–ª–Ω–æ—à–∏—Ä–∏–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å –Ω–µ–æ–Ω–æ–≤—ã–º —ç—Ñ—Ñ–µ–∫—Ç–æ–º */}
                    <div className="w-full bg-gradient-to-br from-cyan-500/20 to-purple-500/20 border-2 border-cyan-400/50 shadow-lg shadow-cyan-500/25 rounded-2xl p-8 group-hover:border-cyan-300/70 group-hover:shadow-xl group-hover:shadow-cyan-500/40 group-active:border-cyan-200 group-active:shadow-2xl group-active:shadow-cyan-500/60 transition-all duration-300">
                      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
                      <div className="text-center mb-6">
                        <div className="text-cyan-300 text-lg font-medium mb-3">–®–∞–≥ {step.step}</div>
                        <div className="text-white text-2xl font-semibold mb-4">{step.text}</div>
                        
                        {/* –ò–∫–æ–Ω–∫–∞ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ */}
                        <div className="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-white/10 to-white/5 rounded-full border border-white/20 mb-6">
                          <div className="text-5xl transform transition-all duration-300 group-hover:scale-110 group-hover:rotate-6">
                            {step.icon}
                          </div>
                        </div>
                      </div>
                      
                      {/* –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ */}
                      <div className="text-center">
                        <p className="text-zinc-300 text-base leading-relaxed max-w-3xl mx-auto">
                          {getStepDescription(step.step)}
                        </p>
                      </div>
                      
                      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∫–ª–∏–∫–∞ */}
                      <div className="text-center mt-8">
                        <p className="text-cyan-400/60 text-sm font-medium group-hover:text-cyan-300/80 transition-colors duration-300">
                          –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        </section>

        {/* Taste Analysis */}
        <section>
          <h2 className="text-3xl font-bold text-white mb-6 text-center">üß† –ê–Ω–∞–ª–∏–∑ –≤–∫—É—Å–∞</h2>
          <div className="bg-black/40 backdrop-blur-sm rounded-2xl p-6 border border-white/10">
            <TasteSemicircles taste={recipe.taste} />
          </div>
        </section>

        {/* Social Functions - –∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è –∫–æ–º–ø–æ–Ω–æ–≤–∫–∞ */}
        <section>
          <h2 className="text-3xl font-bold text-white mb-6 text-center">–í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞</h2>
          <div className="bg-black/40 backdrop-blur-sm rounded-2xl p-6 border border-white/10">
          
          {/* –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –∫–æ–º–ø–æ–Ω–æ–≤–∫–∞ –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏ –∫–Ω–æ–ø–æ–∫ */}
          <div className="flex flex-col max-[800px]:space-y-0 min-[800px]:flex-row min-[800px]:items-center min-[800px]:justify-between min-[800px]:space-y-0">
            
            {/* –ö–Ω–æ–ø–∫–∞ "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ" - —Å–ª–µ–≤–∞ –Ω–∞ –±–æ–ª—å—à–∏—Ö —ç–∫—Ä–∞–Ω–∞—Ö */}
            <div className="min-[800px]:order-1 max-[800px]:order-2 max-[800px]:w-[60%] max-[500px]:w-[80%] max-[800px]:mx-auto max-[800px]:mb-4 max-[800px]:mt-4">
              <Button
                onClick={() => setIsFavorite(!isFavorite)}
                className={`${
                  isFavorite
                    ? 'bg-gradient-to-r from-neon-purple to-purple-500 hover:from-purple-600 hover:to-purple-700'
                    : 'bg-gradient-to-r from-neon-purple/20 to-purple-500/20 hover:from-neon-purple/30 hover:to-purple-500/30 border-2 border-purple-400/50'
                } backdrop-blur-sm px-6 py-3 text-base font-semibold rounded-xl shadow-lg transform hover:scale-105 transition-all duration-300 w-full min-[800px]:w-auto min-[800px]:min-w-[160px]`}
                style={{
                  boxShadow: '0 0 20px rgba(168, 85, 247, 0.4), 0 0 40px rgba(139, 69, 193, 0.2)'
                }}
              >
                <Heart className={`w-5 h-5 mr-2 ${isFavorite ? 'fill-current' : ''}`} />
                {isFavorite ? '–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º' : '–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'}
              </Button>
            </div>

            {/* –†–µ–π—Ç–∏–Ω–≥ –∑–≤–µ–∑–¥–æ—á–∫–∞–º–∏ - –ø–æ —Ü–µ–Ω—Ç—Ä—É */}
            <div className="min-[800px]:order-2 max-[800px]:order-1 text-center max-[800px]:mb-10">
              <div className="flex justify-center space-x-2 mb-2">
                {[1, 2, 3, 4, 5].map((star) => (
                  <Star
                    key={star}
                    className={`w-8 h-8 cursor-pointer transition-all duration-200 transform hover:scale-110 ${
                      userRating >= star
                        ? 'fill-yellow-400 text-yellow-400 drop-shadow-lg'
                        : 'text-white/40 hover:text-yellow-300'
                    }`}
                    onClick={() => setUserRating(star)}
                    style={{ 
                      filter: userRating >= star ? 'drop-shadow(0 0 8px rgba(250, 204, 21, 0.8))' : 'none'
                    }}
                  />
                ))}
              </div>
              <div className="text-white/60 text-sm">
                {recipe.rating} ({recipe.reviewCount} –æ—Ç–∑—ã–≤–æ–≤)
              </div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" - —Å–ø—Ä–∞–≤–∞ –Ω–∞ –±–æ–ª—å—à–∏—Ö —ç–∫—Ä–∞–Ω–∞—Ö */}
            <div className="min-[800px]:order-3 max-[800px]:order-3 max-[800px]:w-[60%] max-[500px]:w-[80%] max-[800px]:mx-auto">
              <Button 
                className="bg-gradient-to-r from-neon-turquoise/20 to-electric/20 hover:from-neon-turquoise/30 hover:to-electric/30 backdrop-blur-sm border-2 border-cyan-400/50 px-6 py-3 text-base font-semibold rounded-xl shadow-lg transform hover:scale-105 transition-all duration-300 w-full min-[800px]:w-auto min-[800px]:min-w-[160px]"
                style={{
                  boxShadow: '0 0 20px rgba(0, 255, 255, 0.4), 0 0 40px rgba(54, 152, 255, 0.2)'
                }}
              >
                <Share2 className="w-5 h-5 mr-2" />
                –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
              </Button>
            </div>
          </div>
          </div>
        </section>

        {/* Recommendations */}
        <section>
          <h2 className="text-3xl font-bold text-white mb-6 text-center">üß¨ –ï—Å–ª–∏ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å ‚Äî –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë</h2>
          <div className="bg-black/40 backdrop-blur-sm rounded-2xl p-6 border border-white/10">
            <div className="grid md:grid-cols-2 gap-6">
              {recipe.recommendations.map((rec, index) => (
                <div key={index} className="bg-white/5 rounded-xl p-6 border border-white/10 hover:bg-white/10 transition-all duration-200 cursor-pointer">
                  <img
                    src={rec.image}
                    alt={rec.name}
                    className="w-full h-48 object-cover rounded-lg mb-4"
                  />
                  <h3 className="text-white text-xl font-semibold mb-2">{rec.name}</h3>
                  <Button className="w-full bg-gradient-to-r from-purple-500 to-cyan-500 hover:from-purple-600 hover:to-cyan-600">
                    –û—Ç–∫—Ä—ã—Ç—å —Ä–µ—Ü–µ–ø—Ç
                  </Button>
                </div>
              ))}
            </div>
          </div>
        </section>
      </div>
    </div>
  );
}